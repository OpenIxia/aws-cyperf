{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "\n    Stack creating a VPC and launch EC2 instances within it.\n    **WARNING** This template creates Amazon EC2 instances.\n    You will be billed for the AWS resources used if you create\n    a stack from this template. **WARNING** This template creates\n    role for the launching/deleting instances/subnets/interfaces.\n    This role will invoke AWSLambdaBasicExecutionRole, please see\n    AWS Documentation for details on AWSLambdaBasicExecutionRole.",
    "Mappings" : {
        "RegionMap" : {
            "us-east-1" : {
                "AMIxAPPLICATION" : "ami-09a4e5f2fed2ddfb6",
                "AMIxBROKER" : "ami-00798ba8ca63df5c0",
                "AMIxAGENT" : "ami-08e253abeea1d29ea",
                "AMIxLICENSE" : "ami-00000000000000000",
                "EC2xCONNECTxCIDR" : "18.206.107.24/29",
                "EC2xREGION" : "US East (N. Virginia)",
                "REGIONxTAG" : "US_EAST_1"
            },
            "us-east-2" : {
                "AMIxAPPLICATION" : "ami-06f169dacde1d6cd6",
                "AMIxBROKER" : "ami-053f8a2338b06c626",
                "AMIxAGENT" : "ami-031831c02869f25b4",
                "AMIxLICENSE" : "ami-00000000000000000",
                "EC2xCONNECTxCIDR" : "3.16.146.0/29",
                "EC2xREGION" : "US East (Ohio)",
                "REGIONxTAG" : "US_EAST_2"
            },
            "us-west-1" : {
                "AMIxAPPLICATION" : "ami-032fc9afd8fab2c3a",
                "AMIxBROKER" : "ami-093452bda1695c728",
                "AMIxAGENT" : "ami-0ffb7d9e2b1fd2812",
                "AMIxLICENSE" : "ami-00000000000000000",
                "EC2xCONNECTxCIDR" : "13.52.6.112/29",
                "EC2xREGION" : "US West (N. California)",
                "REGIONxTAG" : "US_WEST_1"
            },
            "us-west-2" : {
                "AMIxAPPLICATION" : "ami-02fa258e7dd8f3259",
                "AMIxBROKER" : "ami-07323fd37d17b2d33",
                "AMIxAGENT" : "ami-0f67175422ded4dbf",
                "AMIxLICENSE" : "ami-00000000000000000",
                "EC2xCONNECTxCIDR" : "18.237.140.160/29",
                "EC2xREGION" : "US West (Oregon)",
                "REGIONxTAG" : "US_WEST_2"
            },
            "ap-east-1" : {
                "AMIxAPPLICATION" : "ami-00000000000000000",
                "AMIxBROKER" : "ami-00000000000000000",
                "AMIxAGENT" : "ami-00000000000000000",
                "AMIxLICENSE" : "ami-00000000000000000",
                "EC2xCONNECTxCIDR" : "18.206.107.24/29",
                "EC2xREGION" : "Asia Pacific (Hong Kong)",		
                "REGIONxTAG" : "AP_EAST_1"
            },
            "ap-south-1" : {
                "AMIxAPPLICATION" : "ami-0a26b6ce9bbc9a2aa",
                "AMIxBROKER" : "ami-09769ec41687ff2c0",
                "AMIxAGENT" : "ami-0c435f900a82d680c",
                "AMIxLICENSE" : "ami-00000000000000000",
                "EC2xCONNECTxCIDR" : "13.233.177.0/29",
                "EC2xREGION" : "Asia Pacific (Mumbai)",
                "REGIONxTAG" : "AP_SOUTH_1"
            },
            "ap-northeast-2" : {
                "AMIxAPPLICATION" : "ami-08731420cb466aa3c",
                "AMIxBROKER" : "ami-007604648bcb92220",
                "AMIxAGENT" : "ami-0b10f660e892fb9a9",
                "AMIxLICENSE" : "ami-00000000000000000",
                "EC2xCONNECTxCIDR" : "13.209.1.56/29",
                "EC2xREGION" : "Asia Pacific (Seoul)",
                "REGIONxTAG" : "AP_NORTHEAST_2"
            },
            "ap-southeast-1" : {
                "AMIxAPPLICATION" : "ami-0fb39244502c87171",
                "AMIxBROKER" : "ami-01796cf2f162af29f",
                "AMIxAGENT" : "ami-0073e92078a84b4ee",
                "AMIxLICENSE" : "ami-00000000000000000",
                "EC2xCONNECTxCIDR" : "3.0.5.32/29",
                "EC2xREGION" : "Asia Pacific (Singapore)",
                "REGIONxTAG" : "AP_SOUTHEAST_1"
            },
            "ap-southeast-2" : {
                "AMIxAPPLICATION" : "ami-048bd6fd3464ae457",
                "AMIxBROKER" : "ami-065ffd09386ae415f",
                "AMIxAGENT" : "ami-0874ba502f5084650",
                "AMIxLICENSE" : "ami-00000000000000000",
                "EC2xCONNECTxCIDR" : "13.239.158.0/29",
                "EC2xREGION" : "Asia Pacific (Sydney)",
                "REGIONxTAG" : "AP_SOUTHEAST_2"
            },
            "ap-northeast-1" : {
                "AMIxAPPLICATION" : "ami-06ff67bc14ac8b054",
                "AMIxBROKER" : "ami-07b7d06f848005557",
                "AMIxAGENT" : "ami-071e02c09ebb30ca1",
                "AMIxLICENSE" : "ami-00000000000000000",
                "EC2xCONNECTxCIDR" : "3.112.23.0/29",
                "EC2xREGION" : "Asia Pacific (Tokyo)",
                "REGIONxTAG" : "AP_NORTHEAST_1"
            },
            "ca-central-1" : {
                "AMIxAPPLICATION" : "ami-057bc8a6df4a2f43b",
                "AMIxBROKER" : "ami-04f0c81521a6c2095",
                "AMIxAGENT" : "ami-038511d5d337b4f53",
                "AMIxLICENSE" : "ami-00000000000000000",
                "EC2xCONNECTxCIDR" : "35.183.92.176/29",
                "EC2xREGION" : "Canada (Central)",
                "REGIONxTAG" : "CA_CENTRAL_1"
            },
            "eu-central-1" : {
                "AMIxAPPLICATION" : "ami-0391ce707dcb6f5b5",
                "AMIxBROKER" : "ami-0f47656a137649f13",
                "AMIxAGENT" : "ami-05a028b68ff080c73",
                "AMIxLICENSE" : "ami-00000000000000000",
                "EC2xCONNECTxCIDR" : "3.120.181.40/29",
                "EC2xREGION" : "EU (Frankfurt)",
                "REGIONxTAG" : "EU_CENTRAL_1"
            },
            "eu-west-1" : {
                "AMIxAPPLICATION" : "ami-0c42a948112fc0100",
                "AMIxBROKER" : "ami-0f7fbc4e25357e400",
                "AMIxAGENT" : "ami-0a3b9cb19899e404e",
                "AMIxLICENSE" : "ami-00000000000000000",
                "EC2xCONNECTxCIDR" : "18.202.216.48/29",
                "EC2xREGION" : "EU (Ireland)",
                "REGIONxTAG" : "EU_WEST_1"
            },
            "eu-west-2" : {
                "AMIxAPPLICATION" : "ami-0799beead956a5bac",
                "AMIxBROKER" : "ami-0ddd529657d7abb69",
                "AMIxAGENT" : "ami-009cabaf9b733c6cb",
                "AMIxLICENSE" : "ami-00000000000000000",
                "EC2xCONNECTxCIDR" : "3.8.37.24/29",
                "EC2xREGION" : "EU (London)",
                "REGIONxTAG" : "EU_WEST_2"
            },
            "eu-west-3" : {
                "AMIxAPPLICATION" : "ami-0f2cfe3cc155160f5",
                "AMIxBROKER" : "ami-0b51891d2a230325d",
                "AMIxAGENT" : "ami-0806f328c8d9ebdf9",
                "AMIxLICENSE" : "ami-00000000000000000",
                "EC2xCONNECTxCIDR" : "35.180.112.80/29",
                "EC2xREGION" : "EU (Paris)",
                "REGIONxTAG" : "EU_WEST_3"
            },
            "eu-north-1" : {
                "AMIxAPPLICATION" : "ami-0d4ee63e5d1fe8b42",
                "AMIxBROKER" : "ami-0c93acd095f6f3621",
                "AMIxAGENT" : "ami-099eafc8c8edc4f18",
                "AMIxLICENSE" : "ami-00000000000000000",
                "EC2xCONNECTxCIDR" : "13.48.4.200/30",
                "EC2xREGION" : "EU (Stockholm)",
                "REGIONxTAG" : "EU_NORTH_1"
            },
            "me-south-1" : {
                "AMIxAPPLICATION" : "ami-00000000000000000",
                "AMIxBROKER" : "ami-00000000000000000",
                "AMIxAGENT" : "ami-00000000000000000",
                "AMIxLICENSE" : "ami-00000000000000000",
                "EC2xCONNECTxCIDR" : "18.206.107.24/29",
                "EC2xREGION" : "Middle East (Bahrain)",		
                "REGIONxTAG" : "ME_SOUTH_1"
            },
            "sa-east-1" : {
                "AMIxAPPLICATION" : "ami-014db078e9b8c0bc3",
                "AMIxBROKER" : "ami-007a3bc7aacb4ebc1",
                "AMIxAGENT" : "ami-0d12f05ae896c1118",
                "AMIxLICENSE" : "ami-00000000000000000",
                "EC2xCONNECTxCIDR" : "13.48.4.200/30",
                "EC2xREGION" : "South America (Sao Paulo)",
                "REGIONxTAG" : "SA_EAST_1"
            }
        },
        "VariableMap" : {
            "global" : {
                "OPTIONSxTAG" : "MANUAL",
                "PROJECTxTAG" : "CyPerf",
                "FLOWxLOGxRESOURCExTYPE" : "VPC",
                "FLOWxLOGxTRAFFICxTYPE" : "REJECT"
            }
        }
    },
    "Metadata": {
        "AWS::CloudFormation::Interface": {
            "ParameterGroups": [
                {
                    "Label": {
                        "default": "NETWORK CONFIGURATION"
                    }
                },
                {
                    "Label": {
                        "default": "VPC Configuration"
                    },
                    "Parameters": [
                        "Username",
                        "Project",
                        "AvailabilityZone1",
                        "AvailabilityZone2",
                        "VPC",
                        "ControllerNetworkCIDR1",
                        "ControllerNetworkCIDR2"
                    ]
                },
                {
                    "Label": {
                        "default": "CyPerf Agent Configuration"
                    },
                    "Parameters": [
                        "InstanceTypeForCyPerfAgent",
                        "KeyNameForCyPerfAgent",
                        "TagBehindApplicationLB",
                        "AgentTestCIDR1",
                        "AgentTestCIDR2",
                        "AgentControlCIDR1",
                        "AgentControlCIDR2"
                    ]
                },
                {
                    "Label": {
                        "default": "CyPerf Security-Group Configuration"
                    },
                    "Parameters": [
                        "ControllerProxySecurityGroup",
                        "LoadBalancerSecurityGroup",
                        "AgentSecurityGroup"
                    ]
                }
            ],
            "ParameterLabels": {
                "AvailabilityZone1": {
                    "default": "Availability Zone 1"
                },
                "AvailabilityZone2": {
                    "default": "Availability Zone 2"
                },
                "InstanceCount": {
                    "default": "Instance Count"
                },
                "InstanceTypeForCyPerfAgent": {
                    "default": "Instance Type CyPerf Agent"
                },
                "KeyNameForCyPerfAgent": {
                    "default": "SSH Key"
                },
                "AgentControlCIDR1": {
                    "default": "Control Subnet for CyPerf Agents for AZ1"
                },
                "AgentControlCIDR2": {
                    "default": "Control Subnet for CyPerf Agents for AZ2"
                },
                "ControllerNetworkCIDR1": {
                    "default": "Management Subnet for CyPerf Controller for AZ1"
                },
                "ControllerNetworkCIDR2": {
                    "default": "Management Subnet for CyPerf Controller for AZ2"
                },
                "TagBehindApplicationLB": {
                    "default": " Agents Tag running Behind Application LB"
                },
                "AgentTestCIDR1": {
                    "default": "Test Subnet for CyPerf Agents for AZ1"
                },
                "AgentTestCIDR2": {
                    "default": "Test Subnet for CyPerf Agents for AZ2"
                },
                "VPC": {
                    "default": "VPC"
                },
                "AgentSecurityGroup": {
                    "default": "Security group for CyPerf Agent"
                },
                "LoadBalancerSecurityGroup": {
                    "default": "Security group for Load Balancer"
                },
                "ControllerProxySecurityGroup": {
                    "default": "Security group for CyPerf Controller Proxy"
                }
            }
        }
    },
    "Outputs": {
        "ApplicationLBTargetGroup": {
            "Description": "ARN of HTTP target group behind ALB",
            "Value": {
                "Ref": "TargetGroupWebApplication"
            }
        },
        "ApplicationLBTargetGroupHTTPS": {
            "Description": "ARN of HTTPS target group behind ALB",
            "Value": {
                "Ref": "TargetGroupWebApplicationHTTPS"
            }
        },
        "LaunchConfigurationName": {
            "Description": "Name of LaunchConfiguration",
            "Value": {
                "Ref": "LaunchConfiguration"
            }
        },
        "LoadBalacerALBURI": {
            "Description": "Application Load Balancer DNS name",
            "Value": {
                "Fn::Join": [
                    "",
                    [
                        {
                            "Fn::GetAtt": [
                                "ApplicationElasticLB",
                                "DNSName"
                            ]
                        }
                    ]
                ]
            }
        },
        "LoadBalacerALBArn": {
            "Description": "Application Load Balancer ARN name",
            "Value": {
                "Ref": "ApplicationElasticLB"
            }
        },
        "NatsMBINstanceDNS": {
            "Description": "DNS name of Controller instance",
            "Value": {
                "Fn::Join": [
                    "",
                    [
                        {
                            "Fn::GetAtt": [
                                "ControllerProxy",
                                "PublicDnsName"
                            ]
                        }
                    ]
                ]
            }
        },
        "StackRef": {"Value": { "Ref" : "CyPerfWAF"}},
        "WafID" : {
            "Description": "AWS WAF ID",  
            "Value" : { "Fn::GetAtt" : [ "CyPerfWAF", "Outputs.wafWebACL" ] }
        }
    },
    "Parameters": {
        "ApplicationLBHTTPHealthChkPort": {
            "Default": "80",
            "Description": "TCP/IP port of the ApplicationLB HTTP Health Check",
            "Type": "String"
        },
        "ApplicationLBHTTPListenerPort": {
            "Default": "80",
            "Description": "TCP/IP port of the ApplicationLB HTTP Listener",
            "Type": "String"
        },
        "AvailabilityZone1": {
            "Default": "us-west-2a",
            "Description": "Preferred availability zone",
            "Type": "AWS::EC2::AvailabilityZone::Name"
        },
        "AvailabilityZone2": {
            "Default": "us-west-2b",
            "Description": "Preferred availability zone",
            "Type": "AWS::EC2::AvailabilityZone::Name"
        },
        "ControllerProxySecurityGroup": {
            "Default": "<Select CyPerf Controller SecurityGroup security group from drop down>",
            "Description": "CyPerf Contoller Proxy Security group",
            "Type": "AWS::EC2::SecurityGroup::Id"
        },
        "LoadBalancerSecurityGroup": {
            "Default": "<Select LoadBalancer SecurityGroup security group from drop down>",
            "Description": "Load Balancer Security group",
            "Type": "AWS::EC2::SecurityGroup::Id"
        },
        "AgentSecurityGroup": {
            "Default": "<Select CyPerf Agent security group from drop down>",
            "Description": "CyPerf Agent Security group",
            "Type": "AWS::EC2::SecurityGroup::Id"
        },
        "CertificateARN": {
            "Default": "<Specify ARN of server certificates>",
            "Description": "Retrieves a certificate specified by ARN & associate it with Load Balancer's HTTPS listener profile. Example: arn:aws:iam::<AccountID>:server-certificate/<Server certificate name>",
            "Type": "String"
        },
        "ApplicationLBHTTPSHealthChkPort": {
            "Default": "443",
            "Description": "TCP/IP port of the ApplicationLB HTTPS Health Check",
            "Type": "String"
        },
        "ApplicationLBHTTPSListenerPort": {
            "Default": "443",
            "Description": "TCP/IP port of the ApplicationLB HTTPS Listener",
            "Type": "String"
        },
        "InstanceTypeForCyPerfAgent": {
            "AllowedValues": [
                "c4.2xlarge",
                "c5n.9xlarge"
            ],
            "Default": "c4.2xlarge",
            "Description": "Please select CyPerf instance type",
            "Type": "String"
        },
        "KeyNameForCyPerfAgent": {
            "ConstraintDescription": "must be the name of an existing EC2 KeyPair",
            "Default": "CyPerf-keypair",
            "Description": "Existing KeyPair to login to the CyPerf instances",
            "Type": "AWS::EC2::KeyPair::KeyName"
        },
        "AgentControlCIDR1": {
            "Default": "Select Management subnet from drop down",
            "Description": "Select Agent control subnet for AZ1 from drop down",
            "Type": "AWS::EC2::Subnet::Id"
        },
        "AgentControlCIDR2": {
            "Default": "Select Agent control subnet for AZ2 from drop down",
            "Description": "CyPerf agents at AZ2 will use this subnet for control plane communication with controller",
            "Type": "AWS::EC2::Subnet::Id"
        },
        "ControllerNetworkCIDR1": {
            "Default": "Select CyPerf Contoller Management subnet from drop down",
            "Description": "This subnet is attached to CyPerf controller and would be used to access the CyPerf controllers' UI. Also used for Load Balancer subnet for AZ1.",
            "Type": "AWS::EC2::Subnet::Id"
        },
        "ControllerNetworkCIDR2": {
            "Default": "Select Public subnet for AZ2 from drop down",
            "Description": "This subnet is used for Load Balancer subnet for AZ2",
            "Type": "AWS::EC2::Subnet::Id"
        },
        "Project": {
            "Default": "CyPerf-AWS",
            "Description": "Enter Project Name",
            "Type": "String"
        },
        "TagBehindApplicationLB": {
            "Default": "ServerFarmBehindALB",
            "Description": "CyPerf Agent Tag running behind Application LB",
            "Type": "String"
        },
        "AgentTestCIDR1": {
            "Default": "Select Test subnet from drop down",
            "Description": "CyPerf agents will use this subnet for test traffic at AZ1",
            "Type": "AWS::EC2::Subnet::Id"
        },
        "AgentTestCIDR2": {
            "Default": "Select Test subnet from drop down",
            "Description": "CyPerf agents will use this subnet for test traffic at AZ2",
            "Type": "AWS::EC2::Subnet::Id"
        },
        "Username": {
            "Default": "<UserName>@keysight.com",
            "Description": "Enter Team or Individual email id  Responsible for the Stack.",
            "Type": "String"
        },
        "VPC": {
            "Default": "<Select VPC from drop down>",
            "Description": "Stack use seletced VPC",
            "Type": "AWS::EC2::VPC::Id"
        },
        "ScaleCapacityMax": {
            "Default": "2",
            "Description": "Number of maximum CyPerf Agent to run",
            "Type": "String"
        },
        "ScaleCapacityMin": {
            "Default": "2",
            "Description": "Number of minimum CyPerf Agent to run",
            "Type": "String"
        },
        "NetworkOutBytesPerMinute": {
            "Default": "100000",
            "Description": "Average network out capacity to trigger auto scaling",
            "Type": "String"
        }
    },
    "Resources": {
        "CyPerfWAF" : {
            "Type" : "AWS::CloudFormation::Stack",
            "Properties" : {
              "TemplateURL" : "https://aws-cyperf.s3-us-west-2.amazonaws.com/owasp_10_base_custom.yml",
              "Parameters": {
                "stackPrefix": { "Ref": "AWS::StackName" }
            },
              "TimeoutInMinutes" : 120
            }
        },
        "ApplicationElasticLB": {
            "Properties": {
                "Name": {
                    "Fn::Sub": "${AWS::StackName}-ApplicationLB"
                },
                "Scheme": "internet-facing",
                "SecurityGroups": [
                    {
                        "Ref": "LoadBalancerSecurityGroup"
                    }
                ],
                "Subnets": [
                    {
                        "Ref": "ControllerNetworkCIDR1"
                    },
                    {
                        "Ref": "ControllerNetworkCIDR2"
                    }
                ]
            },
            "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer"
        },
        "EC2IfaceRole": {
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Statement": [
                        {
                            "Action": "sts:AssumeRole",
                            "Effect": "Allow",
                            "Principal": {
                                "Service": "ec2.amazonaws.com"
                            }
                        }
                    ],
                    "Version": "2012-10-17"
                },
                "Path": "/",
                "Policies": [
                    {
                        "PolicyDocument": {
                            "Statement": [
                                {
                                    "Action": [
                                        "ec2:CreateNetworkInterface",
                                        "ec2:DescribeInstances",
                                        "ec2:ModifyNetworkInterfaceAttribute",
                                        "ec2:AttachNetworkInterface",
                                        "ec2:DescribeSubnets",
                                        "ec2:DescribeSecurityGroups",
                                        "ec2:DescribeTags"
                                    ],
                                    "Effect": "Allow",
                                    "Resource": "*"
                                }
                            ],
                            "Version": "2012-10-17"
                        },
                        "PolicyName": {
                            "Fn::Join": [
                                "-",
                                [
                                    {
                                        "Ref": "AWS::StackName"
                                    },
                                    "EC2IfacePolicy"
                                ]
                            ]
                        }
                    }
                ],
                "RoleName": {
                    "Fn::Join": [
                        "-",
                        [
                            {
                                "Ref": "AWS::StackName"
                            },
                            "EC2IfaceRole"
                        ]
                    ]
                }
            },
            "Type": "AWS::IAM::Role"
        },
        "EC2InstanceProfile": {
            "DependsOn": "EC2IfaceRole",
            "Properties": {
                "Roles": [
                    {
                        "Ref": "EC2IfaceRole"
                    }
                ]
            },
            "Type": "AWS::IAM::InstanceProfile"
        },
        "LaunchConfiguration": {
            "DependsOn": [
                "ControllerProxy",
                "EC2InstanceProfile"
            ],
            "Properties": {
                "BlockDeviceMappings": [
                    {
                        "DeviceName": "/dev/sda1",
                        "Ebs": {
                            "VolumeSize": "8",
                            "DeleteOnTermination" : true
                        }
                    }
                ],
                "IamInstanceProfile": {
                    "Ref": "EC2InstanceProfile"
                },
                "ImageId": { "Fn::FindInMap" : [ "RegionMap", { "Ref" : "AWS::Region" }, "AMIxAGENT"] },
                "InstanceType": {
                    "Ref": "InstanceTypeForCyPerfAgent"
                },
                "KeyName": {
                    "Ref": "KeyNameForCyPerfAgent"
                },
                "SecurityGroups": [
                    {
                        "Ref": "AgentSecurityGroup"
                    }
                ],
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "",
                            [
                                "#!/bin/bash -xe\n",
                                "cd /opt/keysight/tiger/active/bin/\n",
                                "sh /opt/keysight/tiger/active/bin/Appsec_init ",
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            {
                                                "Fn::GetAtt": [
                                                    "ControllerProxy",
                                                    "PrivateIp"
                                                ]
                                            }
                                        ]
                                    ]
                                },
                                " --behind-alb",
                                " >> /root/Appsec_init\n"
                            ]
                        ]
                    }
                }
            },
            "Type": "AWS::AutoScaling::LaunchConfiguration"
        },
        "ListenerApplication": {
            "Properties": {
                "DefaultActions": [
                    {
                        "TargetGroupArn": {
                            "Ref": "TargetGroupWebApplication"
                        },
                        "Type": "forward"
                    }
                ],
                "LoadBalancerArn": {
                    "Ref": "ApplicationElasticLB"
                },
                "Port": {
                    "Ref": "ApplicationLBHTTPListenerPort"
                },
                "Protocol": "HTTP"
            },
            "Type": "AWS::ElasticLoadBalancingV2::Listener"
        },
        "ListenerSSL": {
            "Properties": {
                "Certificates": [
                    {
                        "CertificateArn": {
                            "Ref": "CertificateARN"
                        }
                    }
                ],
                "DefaultActions": [
                    {
                        "TargetGroupArn": {
                            "Ref": "TargetGroupWebApplication"
                        },
                        "Type": "forward"
                    }
                ],
                "LoadBalancerArn": {
                    "Ref": "ApplicationElasticLB"
                },
                "Port": {
                    "Ref": "ApplicationLBHTTPSListenerPort"
                },
                "Protocol": "HTTPS"
            },
            "Type": "AWS::ElasticLoadBalancingV2::Listener"
        },
        "ControllerProxy": {
            "DependsOn": [
                "proxyeth0",
                "EC2InstanceProfile"
            ],
            "Properties": {
                "BlockDeviceMappings": [
                    {
                        "DeviceName": "/dev/sda1",
                        "Ebs": {
                            "VolumeSize": "8",
                            "DeleteOnTermination" : true
                        }
                    }
                ],
                "IamInstanceProfile": {
                    "Ref": "EC2InstanceProfile"
                },
                "ImageId": { "Fn::FindInMap" : [ "RegionMap", { "Ref" : "AWS::Region" }, "AMIxBROKER"] },
                "InstanceType":"c4.2xlarge",
                "KeyName": {
                    "Ref": "KeyNameForCyPerfAgent"
                },
                "NetworkInterfaces": [
                    {
                        "DeviceIndex": "0",
                        "NetworkInterfaceId": {
                            "Ref": "proxyeth0"
                        }
                    }
                ],
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "-",
                                [
                                    {
                                        "Ref": "AWS::StackName"
                                    },
                                    "Application"
                                ]
                            ]
                        }
                    },
                    {
                        "Key": "Project",
                        "Value": { "Ref": "Project" }
                    },
					{
						"Key": "Options",
						"Value": { "Fn::FindInMap" : [ "VariableMap", "global", "OPTIONSxTAG"] }
					},
                    {
                        "Key": "Owner",
                        "Value": { "Ref": "Username" }
                    }
                ]
            },
            "Type": "AWS::EC2::Instance"
        },
        "ClientAgent": {
            "DependsOn": [
                "clieth0",
                "ControllerProxy",
                "EC2InstanceProfile"
            ],
            "Properties": {
                "BlockDeviceMappings": [
                    {
                        "DeviceName": "/dev/sda1",
                        "Ebs": {
                            "VolumeSize": "8",
                            "DeleteOnTermination" : true
                        }
                    }
                ],
                "IamInstanceProfile": {
                    "Ref": "EC2InstanceProfile"
                },
                "ImageId": { "Fn::FindInMap" : [ "RegionMap", { "Ref" : "AWS::Region" }, "AMIxAGENT"] },
                "InstanceType": {
                    "Ref": "InstanceTypeForCyPerfAgent"
                },
                "KeyName": {
                    "Ref": "KeyNameForCyPerfAgent"
                },
                "NetworkInterfaces": [
                    {
                        "DeviceIndex": "0",
                        "NetworkInterfaceId": {
                            "Ref": "clieth0"
                        }
                    }
                ],
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "",
                            [
                                "#!/bin/bash -xe\n",
                                "cd /opt/keysight/tiger/active/bin/\n",
                                "sh /opt/keysight/tiger/active/bin/Appsec_init ",
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            {
                                                "Fn::GetAtt": [
                                                    "ControllerProxy",
                                                    "PrivateIp"
                                                ]
                                            }
                                        ]
                                    ]
                                },
                                " --behind-alb",
                                " >> /root/Appsec_init\n"
                            ]
                        ]
                    }
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "-",
                                [
                                    {
                                        "Ref": "AWS::StackName"
                                    },
                                    "ClientAgent"
                                ]
                            ]
                        }
                    },
                    {
                        "Key": "Project",
                        "Value": { "Ref": "Project" }
                    },
					{
						"Key": "Options",
						"Value": { "Fn::FindInMap" : [ "VariableMap", "global", "OPTIONSxTAG"] }
					},
                    {
                        "Key": "Owner",
                        "Value": { "Ref": "Username" }
                    }
                ]
            },
            "Type": "AWS::EC2::Instance"
        },
        "TargetGroupWebApplication": {
            "Properties": {
                "HealthCheckIntervalSeconds": "6",
                "HealthCheckPath": "/CyPerfHTTPHealthCheck",
                "HealthCheckPort": {
                    "Ref": "ApplicationLBHTTPHealthChkPort"
                },
                "HealthCheckProtocol": "HTTP",
                "HealthCheckTimeoutSeconds": "5",
                "HealthyThresholdCount": "2",
                "Matcher": {
                    "HttpCode": "200"
                },
                "Name": {
                    "Fn::Join": [
                        "",
                        [
                            {
                                "Ref": "AWS::StackName"
                            },
                            "-TG-ApplicationLB"
                        ]
                    ]
                },
                "Port": {
                    "Ref": "ApplicationLBHTTPListenerPort"
                },
                "Protocol": "HTTP",
                "Targets": [],
                "UnhealthyThresholdCount": "3",
                "VpcId": {
                    "Ref": "VPC"
                },
                "TargetGroupAttributes": [
                    {
                    "Key": "stickiness.enabled",
                    "Value": "false"
                    },
                    {
                    "Key" : "stickiness.lb_cookie.duration_seconds",
                    "Value" : 120
                    }
                ]     
            },
            "Type": "AWS::ElasticLoadBalancingV2::TargetGroup"
        },
        "TargetGroupWebApplicationHTTPS": {
            "Properties": {
                "HealthCheckIntervalSeconds": "6",
                "HealthCheckPath": "/CyPerfHTTPSHealthCheck",
                "HealthCheckPort": {
                    "Ref": "ApplicationLBHTTPSHealthChkPort"
                },
                "HealthCheckProtocol": "HTTPS",
                "HealthCheckTimeoutSeconds": "5",
                "HealthyThresholdCount": "2",
                "Matcher": {
                    "HttpCode": "200"
                },
                "Name": {
                    "Fn::Join": [
                        "",
                        [
                            {
                                "Ref": "AWS::StackName"
                            },
                            "-TG-HTTPSLoadBalancer"
                        ]
                    ]
                },
                "Port": {
                    "Ref": "ApplicationLBHTTPSListenerPort"
                },
                "Protocol": "HTTPS",
                "Targets": [],
                "UnhealthyThresholdCount": "3",
                "VpcId": {
                    "Ref": "VPC"
                },
                "TargetGroupAttributes": [
                    {
                    "Key": "stickiness.enabled",
                    "Value": "false"
                    },
                    {
                    "Key" : "stickiness.lb_cookie.duration_seconds",
                    "Value" : 120
                    }
                ]       
            },
            "Type": "AWS::ElasticLoadBalancingV2::TargetGroup"
        },
        "proxyeth0": {
            "Properties": {
                "Description": "MDW eth0",
                "GroupSet": [
                    {
                        "Ref": "ControllerProxySecurityGroup"
                    }
                ],
                "SourceDestCheck": "true",
                "SubnetId": {
                    "Ref": "ControllerNetworkCIDR1"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "-",
                                [
                                    {
                                        "Ref": "AWS::StackName"
                                    },
                                    "MB-Interface"
                                ]
                            ]
                        }
                    },
                    {
                        "Key": "Project",
                        "Value": { "Ref": "Project" }
                    },
					{
						"Key": "Options",
						"Value": { "Fn::FindInMap" : [ "VariableMap", "global", "OPTIONSxTAG"] }
					},
                    {
                        "Key": "Owner",
                        "Value": { "Ref": "Username" }
                    }
                ]
            },
            "Type": "AWS::EC2::NetworkInterface"
        },
        "clieth0": {
            "Properties": {
                "Description": "Client Agent eth0",
                "GroupSet": [
                    {
                        "Ref": "AgentSecurityGroup"
                    }
                ],
                "SourceDestCheck": "true",
                "SubnetId": {
                    "Ref": "AgentTestCIDR1"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "-",
                                [
                                    {
                                        "Ref": "AWS::StackName"
                                    },
                                    "CA-Interface"
                                ]
                            ]
                        }
                    },
                    {
                        "Key": "Project",
                        "Value": { "Ref": "Project" }
                    },
					{
						"Key": "Options",
						"Value": { "Fn::FindInMap" : [ "VariableMap", "global", "OPTIONSxTAG"] }
					},
                    {
                        "Key": "Owner",
                        "Value": { "Ref": "Username" }
                    }
                ]
            },
            "Type": "AWS::EC2::NetworkInterface"
        },
        "AutoscalingGroupALB": {
            "Properties": {
                "AvailabilityZones": [
                    {
                        "Ref": "AvailabilityZone1"
                    },
                    {
                        "Ref": "AvailabilityZone2"
                    }
                ],
                "Cooldown" : "60",
                "DesiredCapacity": {
                    "Ref": "ScaleCapacityMin"
                },
                "HealthCheckType": "EC2",
                "LaunchConfigurationName": {
                    "Ref": "LaunchConfiguration"
                },
                "MaxSize": {
                    "Ref": "ScaleCapacityMax"
                },
                "MinSize": {
                    "Ref": "ScaleCapacityMin"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "PropagateAtLaunch": true,
                        "Value": {
                            "Fn::Join": [
                                "",
                                [
                                    {
                                        "Ref": "AWS::StackName"
                                    },
                                    {
                                        "Ref": "TagBehindApplicationLB"
                                    }
                                ]
                            ]
                        }
                    },
                    {
                        "Key": "TagName",
                        "PropagateAtLaunch": true,
                        "Value": "ServerFarmBehindALB"
                    },
                    {
                        "Key": "Project",
                        "PropagateAtLaunch": true,
                        "Value": { "Ref": "Project" }
                    },
					{
						"Key": "Options",
                        "PropagateAtLaunch": true,
						"Value": { "Fn::FindInMap" : [ "VariableMap", "global", "OPTIONSxTAG"] }
					},
                    {
                        "Key": "Owner",
                        "PropagateAtLaunch": true,
                        "Value": { "Ref": "Username" }
                    }
                ],
                "TargetGroupARNs": [
                    {
                        "Ref": "TargetGroupWebApplication"
                    },
                    {
                        "Ref": "TargetGroupWebApplicationHTTPS"
                    }
                ],
                "VPCZoneIdentifier": [
                    {
                        "Ref": "AgentTestCIDR1"
                    },
                    {
                        "Ref": "AgentTestCIDR2"
                    }
                ]
            },
            "Type": "AWS::AutoScaling::AutoScalingGroup",
            "UpdatePolicy": {
                "AutoScalingReplacingUpdate": {
                    "WillReplace": "true"
                },
                "AutoScalingRollingUpdate": {
                    "MaxBatchSize": "1",
                    "MinInstancesInService": "1",
                    "PauseTime": "PT5M",
                    "WaitOnResourceSignals": "true"
                }
            }
        },
        "AutoscalingPolicyALB": {
            "Properties": {
                "AutoScalingGroupName": {
                    "Ref": "AutoscalingGroupALB"
                },
                "PolicyType": "TargetTrackingScaling",
                "TargetTrackingConfiguration": {
                    "PredefinedMetricSpecification": {
                        "PredefinedMetricType": "ASGAverageNetworkOut"
                    },
                    "TargetValue": {
                        "Ref": "NetworkOutBytesPerMinute"
                    }
                }
            },
            "Type": "AWS::AutoScaling::ScalingPolicy"
        },
        "MyWebACLAssociation": {
            "Type": "AWS::WAFRegional::WebACLAssociation",
            "Properties": {
              "ResourceArn": { "Ref": "ApplicationElasticLB" },
              "WebACLId": { "Fn::GetAtt" : [ "CyPerfWAF", "Outputs.wafWebACL" ] }
            }
        },
        "myLifecycleHook":{
            "Type":"AWS::AutoScaling::LifecycleHook",
            "Properties":{
                "AutoScalingGroupName":{
                  "Ref":"AutoscalingGroupALB"
                },
                "LifecycleTransition":"autoscaling:EC2_INSTANCE_LAUNCHING",
                "HeartbeatTimeout":180,
                "DefaultResult":"CONTINUE"
            }
        }      
    }
}
