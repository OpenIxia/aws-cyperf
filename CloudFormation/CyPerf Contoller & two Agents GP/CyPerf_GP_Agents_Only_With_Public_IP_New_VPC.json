{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "\n    Stack creating a VPC and launch EC2 instances within it.\n    **WARNING** This template creates Amazon EC2 instances.\n    You will be billed for the AWS resources used if you create\n    a stack from this template. **WARNING** This template creates\n    role for the launching/deleting instances/subnets/interfaces.\n    This role will invoke AWSLambdaBasicExecutionRole, please see\n    AWS Documentation for details on AWSLambdaBasicExecutionRole.",
    "Mappings" : {
		"RegionMap" : {
			"us-east-1" : {
				"AMIxAPPLICATION" : "ami-09a4e5f2fed2ddfb6",
				"AMIxBROKER" : "ami-0bc11d3fda361ad28",
				"AMIxAGENT" : "ami-07b1030615583eeed",
				"AMIxLICENSE" : "ami-00000000000000000",
				"EC2xCONNECTxCIDR" : "18.206.107.24/29",
				"EC2xREGION" : "US East (N. Virginia)",
				"REGIONxTAG" : "US_EAST_1"
			},
			"us-east-2" : {
				"AMIxAPPLICATION" : "ami-06f169dacde1d6cd6",
				"AMIxBROKER" : " ami-03dbe57ba8fd19d46",
				"AMIxAGENT" : "ami-0499b3a872a5a4186",
				"AMIxLICENSE" : "ami-00000000000000000",
				"EC2xCONNECTxCIDR" : "3.16.146.0/29",
				"EC2xREGION" : "US East (Ohio)",
				"REGIONxTAG" : "US_EAST_2"
			},
			"us-west-1" : {
				"AMIxAPPLICATION" : "ami-032fc9afd8fab2c3a",
				"AMIxBROKER" : "ami-0a48f1aa57dfaa214",
				"AMIxAGENT" : "ami-0fc09376b17100039",
				"AMIxLICENSE" : "ami-00000000000000000",
				"EC2xCONNECTxCIDR" : "13.52.6.112/29",
				"EC2xREGION" : "US West (N. California)",
				"REGIONxTAG" : "US_WEST_1"
			},
			"us-west-2" : {
				"AMIxAPPLICATION" : "ami-02fa258e7dd8f3259",
				"AMIxBROKER" : "ami-0a68d15ba3a9f5194",
				"AMIxAGENT" : "ami-0aa183595e1e31fbd",
				"AMIxLICENSE" : "ami-00000000000000000",
				"EC2xCONNECTxCIDR" : "18.237.140.160/29",
				"EC2xREGION" : "US West (Oregon)",
				"REGIONxTAG" : "US_WEST_2"
			},
			"ap-east-1" : {
				"AMIxAPPLICATION" : "ami-00000000000000000",
				"AMIxBROKER" : "ami-00000000000000000",
				"AMIxAGENT" : "ami-00000000000000000",
				"AMIxLICENSE" : "ami-00000000000000000",
				"EC2xCONNECTxCIDR" : "18.206.107.24/29",
				"EC2xREGION" : "Asia Pacific (Hong Kong)",		
				"REGIONxTAG" : "AP_EAST_1"
			},
			"ap-south-1" : {
				"AMIxAPPLICATION" : "ami-0a26b6ce9bbc9a2aa",
				"AMIxBROKER" : "ami-0791ba6e8f4139336",
				"AMIxAGENT" : "ami-07fa24ca649f99967",
				"AMIxLICENSE" : "ami-00000000000000000",
				"EC2xCONNECTxCIDR" : "13.233.177.0/29",
				"EC2xREGION" : "Asia Pacific (Mumbai)",
				"REGIONxTAG" : "AP_SOUTH_1"
			},
			"ap-northeast-2" : {
				"AMIxAPPLICATION" : "ami-08731420cb466aa3c",
				"AMIxBROKER" : "ami-0a83cbe2cb4cfc1f6",
				"AMIxAGENT" : "ami-08b732d6ae38cc775",
				"AMIxLICENSE" : "ami-00000000000000000",
				"EC2xCONNECTxCIDR" : "13.209.1.56/29",
				"EC2xREGION" : "Asia Pacific (Seoul)",
				"REGIONxTAG" : "AP_NORTHEAST_2"
			},
			"ap-southeast-1" : {
				"AMIxAPPLICATION" : "ami-0fb39244502c87171",
				"AMIxBROKER" : "ami-08d524442b211adab",
				"AMIxAGENT" : "ami-06de661a8b994755b",
				"AMIxLICENSE" : "ami-00000000000000000",
				"EC2xCONNECTxCIDR" : "3.0.5.32/29",
				"EC2xREGION" : "Asia Pacific (Singapore)",
				"REGIONxTAG" : "AP_SOUTHEAST_1"
			},
			"ap-southeast-2" : {
				"AMIxAPPLICATION" : "ami-048bd6fd3464ae457",
				"AMIxBROKER" : "ami-02be56bb04f6723d2",
				"AMIxAGENT" : "ami-04aa4c896ca53c059",
				"AMIxLICENSE" : "ami-00000000000000000",
				"EC2xCONNECTxCIDR" : "13.239.158.0/29",
				"EC2xREGION" : "Asia Pacific (Sydney)",
				"REGIONxTAG" : "AP_SOUTHEAST_2"
			},
			"ap-northeast-1" : {
				"AMIxAPPLICATION" : "ami-06ff67bc14ac8b054",
				"AMIxBROKER" : "ami-09a79cdf3d401d7dc",
				"AMIxAGENT" : "ami-0a124bb415913cc7b",
				"AMIxLICENSE" : "ami-00000000000000000",
				"EC2xCONNECTxCIDR" : "3.112.23.0/29",
				"EC2xREGION" : "Asia Pacific (Tokyo)",
				"REGIONxTAG" : "AP_NORTHEAST_1"
			},
			"ca-central-1" : {
				"AMIxAPPLICATION" : "ami-057bc8a6df4a2f43b",
				"AMIxBROKER" : "ami-0fbf2b75ed7952f87",
				"AMIxAGENT" : "ami-0f3624a233be9a2fd",
				"AMIxLICENSE" : "ami-00000000000000000",
				"EC2xCONNECTxCIDR" : "35.183.92.176/29",
				"EC2xREGION" : "Canada (Central)",
				"REGIONxTAG" : "CA_CENTRAL_1"
			},
			"eu-central-1" : {
				"AMIxAPPLICATION" : "ami-0391ce707dcb6f5b5",
				"AMIxBROKER" : "ami-0df49a0051b83b890",
				"AMIxAGENT" : "ami-0621293d00031e600",
				"AMIxLICENSE" : "ami-00000000000000000",
				"EC2xCONNECTxCIDR" : "3.120.181.40/29",
				"EC2xREGION" : "EU (Frankfurt)",
				"REGIONxTAG" : "EU_CENTRAL_1"
			},
			"eu-west-1" : {
				"AMIxAPPLICATION" : "ami-0c42a948112fc0100",
				"AMIxBROKER" : "ami-054e0851a9bf2979c",
				"AMIxAGENT" : "ami-08eaa0718afc66eaa",
				"AMIxLICENSE" : "ami-00000000000000000",
				"EC2xCONNECTxCIDR" : "18.202.216.48/29",
				"EC2xREGION" : "EU (Ireland)",
				"REGIONxTAG" : "EU_WEST_1"
			},
			"eu-west-2" : {
				"AMIxAPPLICATION" : "ami-0799beead956a5bac",
				"AMIxBROKER" : "ami-0381a0ed979825748",
				"AMIxAGENT" : "ami-0e9e0088094fe967a",
				"AMIxLICENSE" : "ami-00000000000000000",
				"EC2xCONNECTxCIDR" : "3.8.37.24/29",
				"EC2xREGION" : "EU (London)",
				"REGIONxTAG" : "EU_WEST_2"
			},
			"eu-west-3" : {
				"AMIxAPPLICATION" : "ami-0f2cfe3cc155160f5",
				"AMIxBROKER" : "ami-03a615a455d703816",
				"AMIxAGENT" : "ami-0183ab9745cc40755",
				"AMIxLICENSE" : "ami-00000000000000000",
				"EC2xCONNECTxCIDR" : "35.180.112.80/29",
				"EC2xREGION" : "EU (Paris)",
				"REGIONxTAG" : "EU_WEST_3"
			},
			"eu-north-1" : {
				"AMIxAPPLICATION" : "ami-0d4ee63e5d1fe8b42",
				"AMIxBROKER" : "ami-04133d9f20ce9f4c4",
				"AMIxAGENT" : "ami-0aadc35f05d9f2b7b",
				"AMIxLICENSE" : "ami-00000000000000000",
				"EC2xCONNECTxCIDR" : "13.48.4.200/30",
				"EC2xREGION" : "EU (Stockholm)",
				"REGIONxTAG" : "EU_NORTH_1"
			},
			"me-south-1" : {
				"AMIxAPPLICATION" : "ami-00000000000000000",
				"AMIxBROKER" : "ami-00000000000000000",
				"AMIxAGENT" : "ami-00000000000000000",
				"AMIxLICENSE" : "ami-00000000000000000",
				"EC2xCONNECTxCIDR" : "18.206.107.24/29",
				"EC2xREGION" : "Middle East (Bahrain)",		
				"REGIONxTAG" : "ME_SOUTH_1"
			},
			"sa-east-1" : {
				"AMIxAPPLICATION" : "ami-014db078e9b8c0bc3",
				"AMIxBROKER" : "ami-044e6a79723ded6c7",
				"AMIxAGENT" : "ami-01e1408253493b1a2",
				"AMIxLICENSE" : "ami-00000000000000000",
				"EC2xCONNECTxCIDR" : "13.48.4.200/30",
				"EC2xREGION" : "South America (Sao Paulo)",
				"REGIONxTAG" : "SA_EAST_1"
			}
		},
		"VariableMap" : {
			"global" : {
                "OPTIONSxTAG" : "MANUAL",
                "PROJECTxTAG" : "CyPerf",
                "FLOWxLOGxRESOURCExTYPE" : "VPC",
				"FLOWxLOGxTRAFFICxTYPE" : "REJECT"
			}
		}
    },
    "Metadata": {
        "AWS::CloudFormation::Interface": {
            "ParameterGroups": [
                {
                    "Label": {
                        "default": "NETWORK CONFIGURATION"
                    }
                },
                {
                    "Label": {
                        "default": "VPC Configuration"
                    },
                    "Parameters": [
                        "Username",
                        "Project",
                        "AvailabilityZone1",
                        "VPCCIDR",
                        "AgentNetworkCIDR"
                    ]
                },
                {
                    "Label": {
                        "default": "CyPerf Agent Configuration"
                    },
                    "Parameters": [
                        "InstanceTypeForCyPerfAgent",
                        "KeyNameForCyPerfAgent"
                    ]
                },
                {
                    "Label": {
                        "default": "Security-Group Configuration"
                    },
                    "Parameters": [
                        "AllowedSubnet1"
                    ]
                }
            ],
            "ParameterLabels": {
                "AvailabilityZone1": {
                    "default": "Availability Zone 1"
                },
                "InstanceTypeForCyPerfAgent": {
                    "default": "Instance Type CyPerf Agent"
                },
                "KeyNameForCyPerfAgent": {
                    "default": "SSH Key"
                },
                "AgentNetworkCIDR": {
                    "default": "Public subnet (Public subnet A) for AZ1"
                },
                "AllowedSubnet1": {
                    "default": "Allowed Subnet for Security Group"
                },
                "VPCCIDR": {
                    "default": "VPC"
                }
            }
        }
    },
    "Outputs": {
    },
    "Parameters": {
        "AvailabilityZone1": {
            "Default": "us-west-2a",
            "Description": "Preferred availability zone",
            "Type": "AWS::EC2::AvailabilityZone::Name"
        },
        "InstanceTypeForCyPerfAgent": {
            "AllowedValues": [
                "c4.2xlarge",
                "c5n.9xlarge"
            ],
            "Default": "c4.2xlarge",
            "Description": "Please select CyPerf instance type",
            "Type": "String"
        },
        "KeyNameForCyPerfAgent": {
            "ConstraintDescription": "must be the name of an existing EC2 KeyPair",
            "Default": "CyPerf-keypair",
            "Description": "Existing KeyPair to login to the CyPerf instances",
            "Type": "AWS::EC2::KeyPair::KeyName"
        },
        "AgentNetworkCIDR": {
            "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
            "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x.",
            "Default": "172.16.1.0/24",
            "Description": "Public subnet (Public subnet A) for AZ1 (eth0)",
            "MaxLength": "18",
            "MinLength": "9",
            "Type": "String"
        },
        "AllowedSubnet1": {
            "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
            "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x.",
            "Default": "1.1.1.1/1",
            "Description": "Subnet range allowed to access deployed AWS resources",
            "MaxLength": "18",
            "MinLength": "9",
            "Type": "String"
        },
        "Project": {
            "Default": "CyPerf-AWS",
            "Description": "Enter Project Name",
            "Type": "String"
        },
        "Username": {
            "Default": "<UserName>@keysight.com",
            "Description": "Enter Team or Individual email id  Responsible for the Stack.",
            "Type": "String"
        },
        "VPCCIDR": {
            "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
            "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x.",
            "Default": "172.16.0.0/16",
            "Description": "CIDR range for the VPC",
            "MaxLength": "18",
            "MinLength": "9",
            "Type": "String"
        }
    },
    "Resources": {
        "DhcpOptionsAssociation": {
            "Properties": {
                "DhcpOptionsId": {
                    "Ref": "VPCxDhcpOptions"
                },
                "VpcId": {
                    "Ref": "VPC"
                }
            },
            "Type": "AWS::EC2::VPCDHCPOptionsAssociation"
        },
        "EC2IfaceRole": {
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Statement": [
                        {
                            "Action": "sts:AssumeRole",
                            "Effect": "Allow",
                            "Principal": {
                                "Service": "ec2.amazonaws.com"
                            }
                        }
                    ],
                    "Version": "2012-10-17"
                },
                "Path": "/",
                "Policies": [
                    {
                        "PolicyDocument": {
                            "Statement": [
                                {
                                    "Action": [
                                        "ec2:CreateNetworkInterface",
                                        "ec2:DescribeInstances",
                                        "ec2:ModifyNetworkInterfaceAttribute",
                                        "ec2:AttachNetworkInterface",
                                        "ec2:DescribeSubnets",
                                        "ec2:DescribeSecurityGroups",
                                        "ec2:DescribeTags"
                                    ],
                                    "Effect": "Allow",
                                    "Resource": "*"
                                }
                            ],
                            "Version": "2012-10-17"
                        },
                        "PolicyName": {
                            "Fn::Join": [
                                "-",
                                [
                                    {
                                        "Ref": "AWS::StackName"
                                    },
                                    "EC2IfacePolicy"
                                ]
                            ]
                        }
                    }
                ],
                "RoleName": {
                    "Fn::Join": [
                        "-",
                        [
                            {
                                "Ref": "AWS::StackName"
                            },
                            "EC2IfaceRole"
                        ]
                    ]
                }
            },
            "Type": "AWS::IAM::Role"
        },
        "EC2InstanceProfile": {
            "DependsOn": "EC2IfaceRole",
            "Properties": {
                "Roles": [
                    {
                        "Ref": "EC2IfaceRole"
                    }
                ]
            },
            "Type": "AWS::IAM::InstanceProfile"
        },
		"DefaultEgress1": {
			"Type" : "AWS::EC2::SecurityGroupEgress",
			"Properties" : {
				"GroupId": { "Fn::GetAtt" : ["VPC", "DefaultSecurityGroup"] },
				"IpProtocol": "-1",
				"SourceSecurityGroupId": { "Fn::GetAtt" : ["VPC", "DefaultSecurityGroup"] }
			}
		},
        "InternetGateway": {
            "Properties": {
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "",
                                [
                                    {
                                        "Ref": "AWS::StackName"
                                    },
                                    "-gateway"
                                ]
                            ]
                        }
                    },
                    {
                        "Key": "Project",
                        "Value": { "Ref": "Project" }
                    },
					{
						"Key": "Options",
						"Value": { "Fn::FindInMap" : [ "VariableMap", "global", "OPTIONSxTAG"] }
					},
                    {
                        "Key": "Owner",
                        "Value": { "Ref": "Username" }
                    }
                ]
            },
            "Type": "AWS::EC2::InternetGateway"
        },
        "InternetGatewayAttachment": {
            "Properties": {
                "InternetGatewayId": {
                    "Ref": "InternetGateway"
                },
                "VpcId": {
                    "Ref": "VPC"
                }
            },
            "Type": "AWS::EC2::VPCGatewayAttachment"
        },
        "AgentSecurityGroup": {
            "Properties": {
                "GroupDescription": "Allow restricted-access to launched Instances",
                "SecurityGroupEgress": [
                    {
                        "CidrIp": "0.0.0.0/0",
                        "Description": "All Traffic",
                        "FromPort": "-1",
                        "IpProtocol": "-1",
                        "ToPort": "-1"
                    }
                ],
                "SecurityGroupIngress": [
                    {
                        "CidrIp": {
                            "Ref": "VPCCIDR"
                        },
                        "Description": "Custom TCP",
                        "FromPort": "80",
                        "IpProtocol": "tcp",
                        "ToPort": "80"
                    },
                    {
                        "CidrIp": {
                            "Ref": "VPCCIDR"
                        },
                        "Description": "Custom TCP",
                        "FromPort": "443",
                        "IpProtocol": "tcp",
                        "ToPort": "443"
                    },
                    {
                        "CidrIp": "0.0.0.0/0",
                        "Description": "Custom TCP",
                        "FromPort": "80",
                        "IpProtocol": "tcp",
                        "ToPort": "80"
                    },
                    {
                        "CidrIp": "0.0.0.0/0",
                        "Description": "Custom TCP",
                        "FromPort": "443",
                        "IpProtocol": "tcp",
                        "ToPort": "443"
                    },
                    {
                        "CidrIp": {
                            "Ref": "VPCCIDR"
                        },
                        "Description": "Custom TCP",
                        "FromPort": "22",
                        "IpProtocol": "tcp",
                        "ToPort": "22"
                    },
                    {
                        "CidrIp": {
                            "Ref": "AllowedSubnet1"
                        },
                        "Description": "Custom TCP",
                        "FromPort": "22",
                        "IpProtocol": "tcp",
                        "ToPort": "22"
                    }
                ],
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "-",
                                [
                                    {
                                        "Ref": "AWS::StackName"
                                    },
                                    "CyPerfAgentSG"
                                ]
                            ]
                        }
                    },
                    {
                        "Key": "Project",
                        "Value": { "Ref": "Project" }
                    },
					{
						"Key": "Options",
						"Value": { "Fn::FindInMap" : [ "VariableMap", "global", "OPTIONSxTAG"] }
					},
                    {
                        "Key": "Owner",
                        "Value": { "Ref": "Username" }
                    }
                ],
                "VpcId": {
                    "Ref": "VPC"
                }
            },
            "Type": "AWS::EC2::SecurityGroup"
        },
        "GPAgent": {
            "DependsOn": [
                "agentEth0",
                "EC2InstanceProfile"
            ],
            "Properties": {
                "BlockDeviceMappings": [
                    {
                        "DeviceName": "/dev/sda1",
                        "Ebs": {
                            "VolumeSize": "8",
                            "DeleteOnTermination" : true
                        }
                    }
                ],
                "IamInstanceProfile": {
                    "Ref": "EC2InstanceProfile"
                },
                "ImageId": { "Fn::FindInMap" : [ "RegionMap", { "Ref" : "AWS::Region" }, "AMIxAGENT"] },
                "InstanceType": {
                    "Ref": "InstanceTypeForCyPerfAgent"
                },
                "KeyName": {
                    "Ref": "KeyNameForCyPerfAgent"
                },
                "NetworkInterfaces": [
                    {
                        "DeviceIndex": "0",
                        "NetworkInterfaceId": {
                            "Ref": "agentEth0"
                        }
                    }
                ],
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Base64": {
                            "Fn::Join": [
                                "",
                                [
                                    "#!/bin/bash -xe\n",
                                    "cd /home/cyperf\n",
                                    "sh /home/cyperf/Appsec_init_gp >> /home/cyperf/Appsec_init_gp_log\n"
                                ]
                            ]
                        }
                    }
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "-",
                                [
                                    {
                                        "Ref": "AWS::StackName"
                                    },
                                    "GPAgent"
                                ]
                            ]
                        }
                    },
                    {
                        "Key": "Project",
                        "Value": { "Ref": "Project" }
                    },
					{
						"Key": "Options",
						"Value": { "Fn::FindInMap" : [ "VariableMap", "global", "OPTIONSxTAG"] }
					},
                    {
                        "Key": "Owner",
                        "Value": { "Ref": "Username" }
                    }
                ]
            },
            "Type": "AWS::EC2::Instance"
        },
        "PublicRouteTable": {
            "Properties": {
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "-",
                                [
                                    {
                                        "Ref": "AWS::StackName"
                                    },
                                    "public-rt"
                                ]
                            ]
                        }
                    }
                ],
                "VpcId": {
                    "Ref": "VPC"
                }
            },
            "Type": "AWS::EC2::RouteTable"
        },
        "PublicSubnetARouteTable": {
            "DependsOn": "StackPublicSubnetA",
            "Properties": {
                "RouteTableId": {
                    "Ref": "PublicRouteTable"
                },
                "SubnetId": {
                    "Ref": "StackPublicSubnetA"
                }
            },
            "Type": "AWS::EC2::SubnetRouteTableAssociation"
        },
        "RouteToInternet": {
            "DependsOn": "InternetGatewayAttachment",
            "Properties": {
                "DestinationCidrBlock": "0.0.0.0/0",
                "GatewayId": {
                    "Ref": "InternetGateway"
                },
                "RouteTableId": {
                    "Ref": "PublicRouteTable"
                }
            },
            "Type": "AWS::EC2::Route"
        },
        "StackPublicSubnetA": {
            "Properties": {
                "AvailabilityZone": {
                    "Ref": "AvailabilityZone1"
                },
                "CidrBlock": {
                    "Ref": "AgentNetworkCIDR"
                },
                "MapPublicIpOnLaunch": "true",
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "-",
                                [
                                    {
                                        "Ref": "AWS::StackName"
                                    },
                                    "public subnet A"
                                ]
                            ]
                        }
                    },
                    {
                        "Key": "Project",
                        "Value": { "Ref": "Project" }
                    },
					{
						"Key": "Options",
						"Value": { "Fn::FindInMap" : [ "VariableMap", "global", "OPTIONSxTAG"] }
					},
                    {
                        "Key": "Owner",
                        "Value": { "Ref": "Username" }
                    }
                ],
                "VpcId": {
                    "Ref": "VPC"
                }
            },
            "Type": "AWS::EC2::Subnet"
        },
        "VPC": {
            "Properties": {
                "CidrBlock": {
                    "Ref": "VPCCIDR"
                },
                "EnableDnsHostnames": "true",
                "EnableDnsSupport": "true",
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Ref": "AWS::StackName"
                        }
                    },
                    {
                        "Key": "Project",
                        "Value": { "Ref": "Project" }
                    },
					{
						"Key": "Options",
						"Value": { "Fn::FindInMap" : [ "VariableMap", "global", "OPTIONSxTAG"] }
					},
                    {
                        "Key": "Owner",
                        "Value": { "Ref": "Username" }
                    }
                ]
            },
            "Type": "AWS::EC2::VPC"
        },
        "VPCxDhcpOptions": {
            "Properties": {
                "DomainName": "VPCxDhcpOptions",
                "DomainNameServers": [
                    "8.8.8.8",
                    "8.8.4.4",
                    "AmazonProvidedDNS"
                ],
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "CyPerfVPCx"
                    },
                    {
                        "Key": "Project",
                        "Value": { "Ref": "Project" }
                    },
					{
						"Key": "Options",
						"Value": { "Fn::FindInMap" : [ "VariableMap", "global", "OPTIONSxTAG"] }
					},
                    {
                        "Key": "Owner",
                        "Value": { "Ref": "Username" }
                    }
                ]
            },
            "Type": "AWS::EC2::DHCPOptions"
        },
        "KeyVPCFlowLogAccessRole": {
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Statement": [
                        {
                            "Action": "sts:AssumeRole",
                            "Effect": "Allow",
                            "Principal": {
                                "Service": "vpc-flow-logs.amazonaws.com"
                            }
                        }
                    ],
                    "Version": "2012-10-17"
                },
                "ManagedPolicyArns": [
                    "arn:aws:iam::aws:policy/CloudWatchLogsFullAccess"
                ],
                "Path": "/"
            },
            "Type": "AWS::IAM::Role"
        },
        "KeyVpcFlowLog" : {
			"Type" : "AWS::EC2::FlowLog",
			"Properties" : {
				"DeliverLogsPermissionArn" : { "Fn::GetAtt" : ["KeyVPCFlowLogAccessRole", "Arn"] },
				"LogGroupName" : { "Fn::Join" : [ "_", [ { "Ref": "AWS::StackName" }, { "Fn::FindInMap" : [ "VariableMap", "global", "PROJECTxTAG"] }, "VPC_FLOW_LOG", 
							{ "Fn::FindInMap" : [ "RegionMap", { "Ref" : "AWS::Region" }, "REGIONxTAG"]} ] ] },
				"ResourceId" : { "Ref" : "VPC" },
				"ResourceType" : { "Fn::FindInMap" : [ "VariableMap", "global", "FLOWxLOGxRESOURCExTYPE"] },
				"TrafficType" : { "Fn::FindInMap" : [ "VariableMap", "global", "FLOWxLOGxTRAFFICxTYPE"] }
			}
		},
        "agentEth0": {
            "Properties": {
                "Description": "Client Agent eth0",
                "GroupSet": [
                    {
                        "Ref": "AgentSecurityGroup"
                    }
                ],
                "SourceDestCheck": "true",
                "SubnetId": {
                    "Ref": "StackPublicSubnetA"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "-",
                                [
                                    {
                                        "Ref": "AWS::StackName"
                                    },
                                    "CA-Interface"
                                ]
                            ]
                        }
                    },
                    {
                        "Key": "Project",
                        "Value": { "Ref": "Project" }
                    },
					{
						"Key": "Options",
						"Value": { "Fn::FindInMap" : [ "VariableMap", "global", "OPTIONSxTAG"] }
					},
                    {
                        "Key": "Owner",
                        "Value": { "Ref": "Username" }
                    }
                ]
            },
            "Type": "AWS::EC2::NetworkInterface"
        }
    }
}
